<?php
// $Id: readability.module,v 1.1.2.1 2010/04/19 00:10:46 tomdude48 Exp $

/**
 * @file
 * Analyzes node content for search engine optimization recommendations
 */

define( 'READABILITY_DEFAULT_TARGETGRADE_MIN', 6 );
define( 'READABILITY_DEFAULT_TARGETGRADE_MAX', 12 );
 
/**
 * Implementation of hook_menu().
 */
function readability_menu() {
  $items = array();
  $items['admin/settings/readability'] = array(
    'title' => t('Readability'),
    'description' => 'Grades readability of content.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('readability_admin_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('admin content analysis'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'readability.admin.inc',
  );
  
  return $items;
}

/*
 *  register readability with readability analyzers
 */
function readability_contentanalysis_analyzers() {
  $analyzers['readability'] = array(
    'title' => t('Readability'),
    'module' => 'readability',
    'callback' => 'readability_analyzer',
    'weight' => -5,
  ); 
  return $analyzers;  
}

/**
 * Includes the Alchemy API Class, checking first to see if it exists.
 */
function readability_include_TextStatistics_class() {
  // check if another module has not already included the AlchemyAPI class.
  if (class_exists('AlchemyAPI')) {
    return TRUE;
  }
  $files[] = './' . drupal_get_path('module', 'readability') . '/php-text-statistics/TextStatistics.php';
  if (module_exists('libraries') && ($p = libraries_get_path('php-text-statistics'))) {
    $files[] = './' . $p . '/TextStatistics.php';
  }
  foreach ($files AS $f) {
    if (file_exists($f)) {
      $file = $f;
      break;
    }
  }  
  if (!$file) {
    $msg = t('The Readability module requires the open source php-text-statictics package.');
    $msg .= l(t('Download the class here.'),'http://code.google.com/p/php-text-statistics/', array('attributes' => array('target' => '_phptextstats')));
    $msg .= "<br><br>";
    $msg .= t(' Download the files and place them in a folder named "php-text-statistics" under the readability module directory.');
    if($analysis) {
      $analysis['messages'][] = contentanalysis_format_message($msg, 'error');
    } else {
      drupal_set_message($msg, 'error');
    }
    return FALSE;
  }
  require_once($file);  
  return TRUE;  
}

/*
 * Implementation of the analyzer hook
 */
function readability_analyzer($context,$analysis,$params) {

  $file = readability_include_TextStatistics_class();
  
  // analyze body
  $body = strtolower($context['body']);
  $body_notags = strip_tags($body);
  
  $textStatistics = new TextStatistics();
  $stats = array();
  $analysis['body']['stats'] = array();
  
  $gmin = variable_get('readability_targetgrade_min',READABILITY_DEFAULT_TARGETGRADE_MIN);
  $gmax = variable_get('readability_targetgrade_min',READABILITY_DEFAULT_TARGETGRADE_MAX);
  
  //$stats['flesch_kincaid_reading_ease'] = $textStatistics->flesch_kincaid_reading_ease($body_notags); 
  //$analysis['body']['stats']['flesch_kincaid_reading_ease'] = contentanalysis_format_stat(t('Flesch Kincaid reading ease'),$stats['flesch_kincaid_reading_ease'],1);
  
  $stats['flesch_kincaid_grade_level'] = $textStatistics->flesch_kincaid_grade_level($body_notags);
  $stats['gunning_fog_score'] = $textStatistics->gunning_fog_score($body_notags); 
  $stats['coleman_liau_index'] = $textStatistics->coleman_liau_index($body_notags); 
  $stats['smog_index'] = $textStatistics->smog_index($body_notags);
  $stats['automated_readability_index'] = $textStatistics->automated_readability_index($body_notags); 

  $statuses = array();
  $total = 0;
  foreach($stats AS $k => $v) {
    $total += $v;
    $statuses[$k] = 'status';
    if(($v < $gmin) || ($v > $gmax)) {
      $statuses[$k] = 'warning';
    }
  }

  $names = array(
    'flesch_kincaid_grade_level' => t('Flesch Kincaid'),
    'gunning_fog_score' => t('Gunning Fog Score'),
    'coleman_liau_index' => t('Coleman Liau Index'),
    'smog_index' => t('SMOG Index'),
    'automated_readability_index' => t('Automated Readability Index'),  
  );
  
  
  foreach($stats AS $k => $v) {
    $analysis['body']['messages'][] = contentanalysis_format_message($names[$k].": ".number_format($v,1),$statuses[$k]);
  }
  
  $stats['average'] = $total/5; 
  $statuses['average'] = 'complete';
  $analysis['#status'] = 'complete';
  $analysis['body']['#status'] = 'complete';
  if(($stats['average'] < $gmin) || ($stats['average'] > $gmax)) {
    $statuses['average'] = 'warning';
    $analysis['#status'] = 'warning';
    $analysis['body']['#status'] = 'warning';
  } 
  
  $analysis['body']['messages'][] = contentanalysis_format_message("<strong>".t('Average').": ".number_format($stats['average'],1)."</strong>",$statuses['average']);
  
  
  $analysis['#context']['analyzer_data']['readability'] = $stats;
  
  return $analysis;
}